{"ast":null,"code":"import { QuestionnaireModule } from \"./questionnaire.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { QuestionService } from \"./question/question.service\";\nimport { combineLatest, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./question/question.service\";\nimport * as i2 from \"./question/question.component\";\nimport * as i3 from \"@angular/common\";\nfunction QuestionnaireComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"app-question\", 1);\n    i0.ɵɵlistener(\"submit\", function QuestionnaireComponent_ng_container_0_Template_app_question_submit_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const STATE_r1 = restoredCtx.ngIf;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.repondre(STATE_r1.student, STATE_r1.question, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const STATE_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Etudiant \", STATE_r1.student.name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", STATE_r1.question);\n  }\n}\nexport class QuestionnaireComponent {\n  constructor(qstSrv) {\n    this.qstSrv = qstSrv;\n    this.stateObs = combineLatest([qstSrv.student, qstSrv.question]).pipe(map(([student, question]) => ({\n      student,\n      question\n    })));\n  }\n  repondre(student, question, L) {\n    this.qstSrv.submitResponse(student, question, L);\n  }\n}\nQuestionnaireComponent.ɵfac = function QuestionnaireComponent_Factory(t) {\n  return new (t || QuestionnaireComponent)(i0.ɵɵdirectiveInject(i1.QuestionService));\n};\nQuestionnaireComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionnaireComponent,\n  selectors: [[\"app-questionnaire\"]],\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([QuestionService]), i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"data\", \"submit\"]],\n  template: function QuestionnaireComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, QuestionnaireComponent_ng_container_0_Template, 4, 2, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.stateObs));\n    }\n  },\n  dependencies: [QuestionnaireModule, i2.QuestionComponent, CommonModule, i3.NgIf, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,mBAAmB,QAAO,wBAAwB;AAC1D,SAAQC,YAAY,QAAO,iBAAiB;AAC5C,SAAQC,eAAe,QAAO,6BAA6B;AAC3D,SAAQC,aAAa,EAAEC,GAAG,QAAmB,MAAM;;;;;;;;ICLnDC,6BAAgD;IAC5CA,0BAAI;IAAAA,YAA+B;IAAAA,iBAAK;IACxCA,uCAAkG;IAA3DA;MAAA;MAAA;MAAA;MAAA,OAAUA,2EAA+C;IAAA,EAAC;IAACA,iBAAe;IACrHA,0BAAe;;;;IAFPA,eAA+B;IAA/BA,6DAA+B;IACrBA,eAAwB;IAAxBA,wCAAwB;;;ADqB1C,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,MAAsB;IAAtB,WAAM,GAANA,MAAM;IACxB,IAAI,CAACC,QAAQ,GAAGN,aAAa,CACzB,CACIK,MAAM,CAACE,OAAO,EACdF,MAAM,CAACG,QAAQ,CAClB,CACJ,CAACC,IAAI,CACFR,GAAG,CAAE,CAAC,CAACM,OAAO,EAACC,QAAQ,CAAC,MAAM;MAACD,OAAO;MAACC;IAAQ,CAAC,CAAC,CAAE,CAClD;EACP;EAEAE,QAAQ,CAAEH,OAAe,EAAEC,QAAkB,EAAEG,CAAqB;IAClE,IAAI,CAACN,MAAM,CAACO,cAAc,CAACL,OAAO,EAAEC,QAAQ,EAAEG,CAAC,CAAC;EAClD;;AAhBWR,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAU;EAAAC;EAAAC,iCAFnB,CAAChB,eAAe,CAAC;EAAAiB;EAAAC;EAAAC;EAAAC;IAAA;MCrBjCjB,yFAGe;;;;MAHAA,yDAAuB;;;iBDoBvBL,mBAAmB,wBAACC,YAAY;EAAAsB;AAAA","names":["QuestionnaireModule","CommonModule","QuestionService","combineLatest","map","i0","QuestionnaireComponent","constructor","qstSrv","stateObs","student","question","pipe","repondre","L","submitResponse","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["/home/ecloud/l3miage-projet-integrateur/src/app/questionnaire/questionnaire.component.ts","/home/ecloud/l3miage-projet-integrateur/src/app/questionnaire/questionnaire.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Question, Student} from \"./questionnaire.service\";\nimport {QuestionnaireModule} from \"./questionnaire.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {QuestionService} from \"./question/question.service\";\nimport {combineLatest, map, Observable} from \"rxjs\";\n\n\n\ninterface STATE{\n  student: Student;\n  question:Question;\n}\n\n@Component({\n\n    selector: 'app-questionnaire',\n    templateUrl: './questionnaire.component.html',\n    styleUrls: ['./questionnaire.component.scss'],\n    standalone : true,\n    imports : [QuestionnaireModule,CommonModule],\n    providers : [QuestionService]\n})\nexport class QuestionnaireComponent {\n  stateObs: Observable<STATE>;\n\n  constructor(private qstSrv:QuestionService) {\n    this.stateObs = combineLatest(\n        [\n            qstSrv.student,\n            qstSrv.question\n        ]\n    ).pipe(\n        map( ([student,question]) => ({student,question}) )\n        )\n  }\n\n  repondre (student:Student, question: Question, L : readonly number[]): void {\n    this.qstSrv.submitResponse(student, question, L) ;\n  }\n}\n","<ng-container *ngIf=\"stateObs | async as STATE\">\n    <h1>Etudiant {{STATE.student.name}}</h1>\n    <app-question [data]= \"STATE.question\" (submit)=\"repondre(STATE.student, STATE.question, $event)\"></app-question>\n</ng-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}